buildscript {
    ext.kotlin_version = '1.2.50'
    ext.ktor_version = '0.9.3'
    ext.postgresql_version = '42.1.4'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.maeharin:factlin:0.2.0'
        classpath "org.postgresql:postgresql:$postgresql_version"
    }
}

group 'com.maeharin'
version '1.0-SNAPSHOT'

apply plugin:'application'
mainClassName = "io.ktor.server.netty.DevelopmentEngine"

//apply plugin: 'java'
apply plugin: 'kotlin'
kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'factlin'
factlin {
    def dbHost = System.getenv("DB_HOST")
    dbUrl = "jdbc:postgresql://$dbHost/dvdrental" // docker ip
    dbUser = "postgres"
    dbPassword = ""
    dbDialect = "postgres"
    //fixtureOutputDir = "src/test/kotlin/com/maeharin/factlin/fixtures"
    //fixturePackageName = "com.maeharin.factlin.fixtures"
    //fixtureTemplatePath = ""
    //includeTables = ["users", "film", "language"]
    //excludeTables = ["category", "address"]
    cleanOutputDir = true
    //customDefaultValues = [
    //        ["", "", ""]
    //]
    //customTypeMapper = [
    //        "": ""
    //]
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "org.jetbrains.exposed:exposed:0.10.4"
    compile "com.zaxxer:HikariCP:3.2.0"
    compile "org.postgresql:postgresql:$postgresql_version"
    compile "ch.qos.logback:logback-classic:1.2.3"

    testCompile 'com.ninja-squad:DbSetup-kotlin:2.1.0'
    // ktor-server-test
    testCompile "io.ktor:ktor-server-test-host:$ktor_version"

    // kotlin-test-junit
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // hacrest-library
    testCompile "org.hamcrest:hamcrest-library:1.3"

}

test {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
